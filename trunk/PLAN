================
Datatracker PLAN
================

Updated: $Date$

Planned work in rough order
===========================

* Schema changes: Person.bio and Person.photo, with derived photo pages
  for WG Chairs, IESG, and IAB

* Modified account creation, with safeguards against spammer accounts

* Interim meeting management project merge, which will also fix the interim
  materials 404 errors.

* Glue code for WG issue trackers and wiki:
  - create new trackers on group creation
  - update access lists on group chair/secretary changes
  - update components on new group documents

* Schema Changes: floorplan, document tags, external links for groups.  Add
  Berlin floorplans manually.

* Add "Waiting for implementation" and "Held by WG" states, with comment field

* Glue code to trigger generation of htmlized documents on www.ietf.org

* Review tracking project merge

* Upgrade to Django 1.8 / 1.9

* Add support for internationalised email addresses according to RFC 6531
  when sending email (this is not supported by smtplib under Python 2.7,
  so will need support code in the application until we migrate to Python 3.5)

* Meeting materials enhancements

* Transition to PostgreSQL

* Performance analysis of database table and index setup

* Code refactoring to avoid code changes for new WG document tags

* When draft XML source is available, take references from that instead
  of extracting them from the text version.

* Transition to running under Python 3.x (probably 3.5) instead of 2.7


* Small nomcom refactoring: associate Feedback records with Person
  instead of User.

* Consistency fix:  in settings.py, name directory settings consistently with
  ..._DIR; reserving ..._PATH for settings with PATH semantics (':'-separated lists
  of directories)

* For documents with Yang modules, add links to the extracted modules (possibly in
  multiple formats -- pyang can generate a large number of alternative formats)

* When we get to the point where we can produce pdf from xml+media, remove the
  pdf upload possibility -- it's a definite attack vector.  Possibly start scanning
  pdf files for /JS and /JavaScript (and workarounds to hide Javascript)

