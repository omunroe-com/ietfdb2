# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-25 12:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('name', '0020_add_topics'),
        ('dbtemplate', '0006_adjust_feedback_receipt_template'),
        ('person', '0019_add_discovered_people'),
        ('nomcom', '0015_show_pictures'),
    ]

    operations = [
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text=b'This short description will appear on the Feedback pages.', max_length=255, verbose_name=b'Name')),
                ('accepting_feedback', models.BooleanField(default=False, verbose_name=b'Is accepting feedback')),
                ('audience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='name.TopicAudienceName')),
                ('description', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='description', to='dbtemplate.DBTemplate')),
                ('nomcom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomcom.NomCom')),
            ],
            options={
                'verbose_name_plural': 'Topics',
            },
        ),
        migrations.CreateModel(
            name='TopicFeedbackLastSeen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='person.Person')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomcom.Topic')),
            ],
        ),
        migrations.AddField(
            model_name='feedback',
            name='topics',
            field=models.ManyToManyField(blank=True, to='nomcom.Topic'),
        ),
    ]
