# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-04-20 14:21
from __future__ import unicode_literals

from django.db import migrations

new_addresses = {
'alan@routingloop.com': 101241, # Alan Hannan (3210)
'anup@netscape.com': 20575, # Anup Rao (2326)
'arnoud.van.wijk@eln.ericsson.se': 104823, # Arnoud Van Wijk (3351)
'arun@force10networks.com': 18356, # Arun Viswanathan (3031)
'bathricg@agcs.com': 113217, # Gregory Bathrick (2662)
'bill.strahm@intel.com': 21575, # Bill Strahm (2959)
'brettk@invidi.com': 105169, # Brett Kosinski (3520)
'brunner@engage.com': 105394, # Eric Brunner-Williams (2929)
'bt0008@sbc.com': 21716, # Brian Thomas (2693)
'bygg@sunet.se': 4119, # Johnny Eriksson (1926)
'c.yin.lee@gmail.com': 101468, # Cheng-Yin Lee (4874)
'carl@malamud.com': 3752, # Carl Malamud (1486)
'carle@fokus.fhg.de': 10891, # Georg Carle (3334)
'cerf@nri.reston.va.us': 119894, # Vint Cerf (1217)
'cerpa@cs.ucla.edu': 103967, # Alberto Cerpa (3507)
'charle@microsoft.com': 104665, # Charles Eliot (3458)
'charley@catarina.usc.edu': 16783, # Ching-Gung Liu (2362)
'cheng@ralvm6.vnet.ibm.com': 10783, # Jia-bing R. Cheng (1593)
'chihschung@aol.com': 16951, # Chris Chung (2417)
'chiu@research.att.com': 105201, # Angela Chiu (4054)
'christian.huitema@sophia.inria.fr': 3147, # Christian Huitema (1601)
'cperkins@sun.com': 5133, # Charles E. Perkins (2609)
'craig.a.finseth-1@umn.edu': 1179, # Craig A. Finseth (1439)
'dafna_sheinwald@il.ibm.com': 105179, # Dafna Sheinwald (3385)
'dcooper@gblx.net': 105259, # Dave Cooper (3346)
'ddp@andrew.cmu.edu': 8371, # Drew D. Perkins (1171)
'degustafson@comcast.net': 104900, # Dale Gustafson (3760)
'dixon@rare.nl': 6234, # Tim Dixon (1454)
'dkatz@merit.edu': 2399, # Dave Katz (1188)
'dpendarakis@tellium.com': 21753, # Dimitrios Pendarakis (3474)
'droid@cray.com': 4031, # Andy Nicholson (1306)
'dromasca@madge.com': 6699, # Dan Romascanu (2239)
'ed_campbell@3com.com': 103297, # Ed Campbell (2989)
'edc@explosive.net': 104147, # Edward Crabbe (2873)
'efri@xiv.co.il': 104188, # Efri Zeidner (3720)
'eitan@xacct.com': 105227, # Eitan Elkin (3423)
'erik.nordmark@eng.sun.com': 8243, # Erik Nordmark (1933)
'ewgray@mindspring.com': 107729, # Eric Gray (3037)
'faye@pedestalnetworks.com': 14632, # Faye Ly (3606)
'fmaino@andiamo.com': 108983, # Fabio Maino (3826)
'fong@fore.com': 8193, # Fong-Ching Liaw (1755)
'freier@apple.com': 15102, # Alan O. Freier (1301)
'frystyk@microsoft.com': 17546, # Henrik Frystyk Nielsen (2774)
'fu.xihua@stairnote.com': 109932, # Xihua Fu (7698)
'fukunaga444@oki.com': 104553, # Shigeru Fukunaga (4586)
'g.michaelson@cc.uq.oz.au': 17141, # George G. Michaelson (1562)
'geoff.huston@aarnet.edu.au': 106925, # Geoff Huston (1744)
'ginoza@isi.edu': 104401, # Sandy Ginoza (2699)
'gregside@nortelnetworks.com': 102749, # Greg Sidebottom (3057)
'gvaudre@cnri.reston.va.us': 2485, # Greg Vaudreuil (1428)
'gwright@nortelnetworks.com': 102149, # Gregory Wright (3213)
'hans.hannu@ericsson.com': 103796, # Hans Hannu (3095)
'hinden@bbn.com': 2793, # Robert M. Hinden (1264)
'hlin@research.telcordia.com': 103764, # Haui-an Paul Lin (2719)
'hoffman@isi.edu': 11612, # Eric Hoffman (1755)
'hotz@usc.edu': 4815, # Steven Hotz (1322)
'houttuin@rare.nl': 10117, # Jeroen Houttuin (1711)
'huitema@bellcore.com': 3147, # Christian Huitema (2032)
'hwb@merit.edu': 157, # Hans-Werner Braun (1104)
'hwb@sdsc.edu': 157, # Hans-Werner Braun (1222)
'irina@ennovatenetworks.com': 102134, # Irina Suconick (2959)
'jason.goldschmidt@sun.com': 103908, # Jason Goldschmidt (3082)
'jcrb@motorola.com': 19701, # Jon Bennett (3246)
'jcurran@nnsc.nsf.net': 4816, # John Curran (1355)
'jean-louis.leroux@rd.francetelecom.com': 105705, # Jean-Louis Le Roux (6001)
'jeff.turner@raba.com': 20193, # Jeff Turner (2408)
'jim@wovensystems.com': 122623, # Jim Martin (5186)
'jkr@cray.com': 4230, # John K. Renwick (1374)
'jkreynolds@isi.edu': 2804, # Joyce K. Reynolds (1084)
'jmahdavi@earthlink.net': 6344, # Jamshid Mahdavi (3819)
'jonsson@mathematik.uni-marburg.de': 121325, # Jakob Jonsson (3447)
'jrmii@isc.org': 122623, # Jim Martin (5905)
'jstewart@isi.edu': 10845, # John Stewart (2270)
'jwesth@microsoft.com': 105447, # Jeff Westhead (3645)
'kaj@nvuxr.cc.bellcore.com': 3798, # Kaj Tesink (1233)
'keith.evans@tandem.com': 21647, # Keith Evans (2371)
'kimh@internic.net': 10057, # Kim Hubbard (2050)
'lili@ss8networks.com': 103829, # Li Li (3214)
'linn@ultra.enet.dec.com': 3385, # John Linn (1113)
'lln@csee.ltu.se': 102381, # Lars-Ake Larzon (3828)
'llp@cs.arizona.edu': 112235, # Larry Peterson (2309)
'long@nortelnetworks.com': 23036, # Lyndon Ong (2719)
'lsanchez@ir.bbn.com': 19237, # Luis A. Sanchez (2488)
'luo@weiluo.net': 105095, # Wei Luo (6074)
'lyman@bbn.com': 112574, # Lyman Chapin (1358)
'mahdavi@novell.com': 6344, # Jamshid Mahdavi (2883)
'matsui.yoshinori@jp.panasonic.com': 113240, # Yoshinori Matsui (4396)
'matthew.bocci@alcatel.co.uk': 105786, # Matthew Bocci (4717)
'michael.gasson@korusolutions.com': 105474, # Mick Gasson (3351)
'michael.tuexen@icn.siemens.de': 104695, # Michael Tuexen (3237)
'mike.spanner@rnid.org.uk': 105473, # Mike Spanner (3351)
'minshall@fiberlane.com': 2740, # Greg Minshall (2309)
'mmurata@trl.ibm.co.jp': 102029, # Murata Makoto (3023)
'mogul@decwrl.dec.com': 2427, # Jeffrey Mogul (1191)
'mpeck@alumni.virginia.edu': 110886, # Michael Peck (6403)
'mshin@nist.gov': 105036, # Myung-Ki Shin (4038)
'narsim@nortelnetworks.com': 104924, # Narsimuloo Mangalpally (4129)
'nelson@sun.soe.clarkson.edu': 10462, # Russell Nelson (1159)
'ole@csli.stanford.edu': 2794, # Ole J. Jacobsen (1208)
'oppenheime1@applelink.apple.com': 3398, # Alan B. Oppenheimer (1504)
'osmund.desouza@att.com': 11150, # Osmund S. deSouza (1586)
'paul.sijben@picopoint.com': 103146, # Paul Sijben (3304)
'plzak@nic.ddn.mil': 113210, # Raymond Plzak (1956)
'ranjith.mukundan@wipro.com': 104923, # Ranjith Mukundan (4129)
'remco@sateh.com': 101463, # Remco van Mook (2322)
'renato@dstc.edu.au': 114553, # Renato Iannella (2611)
'rfox@tandem.com': 2360, # Richard Fox (1106)
'rgcole@att.com': 16738, # Robert G. Cole (3577)
'richard.stastny@gmail.com': 105862, # Richard Stastny (5526)
'rja@cisco.com': 6059, # Randall Atkinson (2130)
'rmoats@coreon.net': 19062, # Ryan Moats (2926)
'rsuri@cisco.com': 106738, # Rohit Suri (5412)
's.kille@cs.ucl.ac.uk': 3150, # Steve Kille (1137)
'saint@wais.com': 11690, # Margaret St. Pierre (1625)
'schwartz@cs.colorado.edu': 113287, # Michael F. Schwartz (1273)
'scottw@internic.net': 5263, # Scott Williamson (1400)
'sekim@kt.com': 108004, # Sang-Eon Kim (5181)
'solimanhs@gmail.com': 104305, # Hesham Soliman (4763)
'songlee@ee.washington.edu': 105239, # Junhyuk Song (4493)
'steven.lass@verizonbusiness.com': 105329, # Steven Lass (4504)
'steven.van_den_berghe@alcatel-lucent.com': 105039, # Steven Van den Berghe (5835)
'sunil.iyengar@logica.com': 108201, # Sunil Iyengar (5458)
'surajk@techmahindra.com': 107092, # Suraj Kumar (5192)
'thommy.eklof@hotsip.com': 101609, # Thommy Eklof (2968)
'tnadeau@brocade.com': 104197, # Thomas Nadeau (7275)
'tob@netapp.com': 105606, # Toby Smith (4447)
'tom.taylor@rogers.com': 100754, # Tom Taylor (5189)
'van@csam.lbl.gov': 2703, # Van Jacobson (1185)
'vasile.radoaca@alcatel-lucent.com': 105515, # Vasile Radoaca (6074)
'wataru.imajuku@ieee.org': 105719, # Wataru Imajuku (6163)
'wls@rainfarm.com': 6734, # Walter Stickle (2150)
'woody@cseic.saic.com': 2498, # Robert A. Woodburn (1241)
'xing.chen@usa.alcatel.com': 21769, # Xing Chen (2989)
'xipeng@redback.com': 113285, # XiPeng Xiao (3272)
'xxiao@photuris.com': 113285, # XiPeng Xiao (3210)
'yakov@ibm.com': 10535, # Yakov Rekhter (1322)
'yjj@eng.umd.edu': 18900, # Yuan Jiang (1842)
'ylee@ceterusnetworks.com': 105236, # Young Lee (3214)
'z.wang@cs.ucl.ac.uk': 110650, # Zheng Wang (1335)
'zeev.vax@magnumsemi.com': 109637, # Zeev Vax (6285)
}


known_missing_person_records = [
    (3150, "Steve Kille"),
]

def forward(apps,schema_editor):

    Email=apps.get_model('person','Email')
    Person = apps.get_model('person', 'Person')

    for id, name in known_missing_person_records:
        if not Person.objects.filter(id=id).exists():
            Person.objects.create(id=id, name=name, ascii=name)

    # Sanity check
    for addr, id in new_addresses.items():
        if Email.objects.filter(address__iexact=addr).exists():
            raise Exception("%s already exists in the Email table"%addr)
        if not Person.objects.filter(id=id).exists():
            raise Exception("ID #%s is missing in the Person table"%id)

    for addr in new_addresses.keys():
        Email.objects.create(address=addr,person_id=new_addresses[addr],active=False,primary=False)

def reverse(apps,schema_editor):
    Email=apps.get_model('person','Email')
    Person = apps.get_model('person', 'Person')    
    #Person=apps.get_model('person','Person')
    #print "new_addresses = {"
    #for addr in sorted(new_addresses.keys()):
    #    print "'%s': %s, # %s"%(addr,new_addresses[addr],Person.objects.get(pk=new_addresses[addr]).name) 
    #print "}"
    Email.objects.filter(address__in=new_addresses.keys()).delete()
    Person.objects.filter(id__in=[ id for id,name in known_missing_person_records ]).delete()

class Migration(migrations.Migration):

    dependencies = [
        ('person', '0016_add_email_addresses_from_rfc_editor'),
    ]

    operations = [
        migrations.RunPython(forward,reverse)
    ]
