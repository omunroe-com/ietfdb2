# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-02 14:13
from __future__ import unicode_literals

from django.db import migrations

from collections import namedtuple

A=namedtuple('A',['address','name'])

discovered_people = [

A(address='nhall@cs.wisc.edu',name='Nancy E. Hall'), # (parsed 1070)
A(address='ljm@twg.com',name='Leo J. McLaughlin III'), # (parsed 1088)
A(address='schoff@stonewall.nyser.net',name='Marty Schoffstall'), # (parsed 1089)
A(address='fedor@patton.nyser.net',name='Mark Fedor'), # (parsed 1089)
A(address='schoff@nisc.nyser.net',name='Martin Lee Schoffstall'), # (parsed 1098)
A(address='lk@cs.ucla.edu',name='Leonard Kleinrock'), # (parsed 1121)
A(address='boehm@cs.ucla.edu',name='Barry Boehm'), # (parsed 1121)
A(address='little@saic.com',name='Mike Little'), # (parsed 1126)
A(address='akullberg@bbn.com',name='A. Kullberg'), # (parsed 1141)
A(address='tmallory@ccv.bbn.com',name='Tracy Mallory'), # (parsed 1141)
A(address='zweig@cs.uiuc.edu',name='Johnny Zweig'), # (parsed 1145)
A(address='stine@sparta.com',name='Robert Stine'), # (rfced 1147)
A(address='dwaitzman@bbn.com',name='David Waitzman'), # (parsed 1149)
A(address='jch@tcgould.tn.cornell.edu',name='Jeffrey C. Honig'), # (parsed 1164)
A(address='mills@ecf.ncsl.nist.gov',name='Kevin L. Mills'), # (parsed 1169)
A(address='jbvb@ftp.com',name='James Van Bokkelen'), # (rfced 1173)
A(address='libes@cme.nist.gov',name='Don Libes'), # (parsed 1178)
A(address='claudiak@spider.co.uk',name='Claudia Jeanne Kale'), # (parsed 1180)
A(address='teds@spider.co.uk',name='Theodore John Socolofsky'), # (parsed 1180)
A(address='k13@nikhef.nl',name='Rob Blokzijl'), # (parsed 1181)
A(address='kahin@hulaw.harvard.edu',name='Brian Kahin'), # (parsed 1192)
A(address='rws@expo.lcs.mit.edu',name='Bob Scheifler'), # (parsed 1198)
A(address='rice@sumex-aim.stanford.edu',name='James Rice'), # (parsed 1203)
A(address='yeh@netix.com',name='Shannon Yeh'), # (parsed 1204)
A(address='dlee@netix.com',name='David Lee'), # (parsed 1204)
A(address='paulc@rchland.iinus1.ibm.com',name='Paul Chmielewski'), # (parsed 1205)
A(address='lynch@isi.edu',name='Daniel C. Lynch'), # (parsed 1208)
A(address='westine@isi.edu',name='Ann Westine'), # (parsed 1211)
A(address='wbe@bbn.com',name='Winston Edmond'), # (parsed 1221)
A(address='louiss@ibm.com',name='Lou Steinberg'), # (parsed 1224)
A(address='kolb@psi.com',name='Christopher P. Kolb'), # (parsed 1232)
A(address='tacox@sabre.bellcore.com',name='Tracy A. Cox'), # (parsed 1233)
A(address='maguire@cs.columbia.edu',name='Gerald Q. Maguire'), # (parsed 1235)
A(address='lmorales@huachuca-emh8.army.mil',name='Luis F. Morales'), # (parsed 1236)
A(address='phasse@huachuca-emh8.army.mil',name='Phillip R. Hasse'), # (parsed 1236)
A(address='chi@osf.org',name='Chikong Shue'), # (parsed 1240)
A(address='bill@comm.wang.com',name='William Haggerty'), # (parsed 1240)
A(address='holbrook@cic.net',name='Paul Holbrook'), # (parsed 1244)
A(address='bryan@umich.edu',name='Bryan Beecher'), # (parsed 1249)
A(address='brian@ucsd.edu',name='Brian Kantor'), # (rfced 1258)
A(address='mkapor@eff.org',name='Mitchell Kapor'), # (parsed 1259)
A(address='leslie@diis.ddn.mil',name='Leslie Nobile'), # (parsed 1261)
A(address='jmartin@magnus.acs.ohio-state.edu',name='Jerry Martin'), # (parsed 1290)
A(address='mkl@nisc.sri.com',name='Mark K. Lottor'), # (parsed 1296)
A(address='bwormley@novell.com',name='Raymond Brett Wormley'), # (parsed 1298)
A(address='steveb@novell.com',name='Steve Bostock'), # (parsed 1298)
A(address='mkennedy@isi.edu',name='Mary Kennedy'), # (parsed 1299)
A(address='0004689513@mcimail.com',name='Stanley R. Greenfield'), # (parsed 1300)
A(address='armstrong@wrc.xerox.com',name='Susan M. Armstrong'), # (parsed 1301)
A(address='marzullo@cs.cornell.edu',name='Keith A. Marzullo'), # (parsed 1301)
A(address='heker@nisc.jvnc.net',name='Sergio Heker'), # (parsed 1309)
A(address='geoff@east.sun.com',name='Geoff Arnold'), # (parsed 1312)
A(address='katz@isi.edu',name='Alan Katz'), # (parsed 1314)
A(address='charles@acc.com',name='Charles Carvalho'), # (parsed 1315)
A(address='thimmela@sniabg.wa.sni.de',name='Peter Kuehn'), # (parsed 1329)
A(address='martyne@nr-tech.cit.cornell.edu',name='acm siguccs'), # (rfced 1359)
A(address='mallen@novell.com',name='Michael Allen'), # (parsed 1362)
A(address='72550.1634@compuserve.com',name='Karanjit Siyan'), # (parsed 1365)
A(address='tpt2@isi.edu',name='Tom Tignor'), # (parsed 1373)
A(address='elliott@isi.edu',name='Josh Elliott'), # (parsed 1399)
A(address='nic@osu.edu',name='Jerry Martin'), # (parsed 1402)
A(address='rcdixon@ralvmg.vnet.ibm.com',name='Roy C. Dixon'), # (parsed 1434)
A(address='dmj@boombox.micro.umn.edu',name='David Johnson'), # (parsed 1436)
A(address='alberti@boombox.micro.umn.edu',name='Bob Alberti'), # (parsed 1436)
A(address='daniel@boombox.micro.umn.edu',name='Daniel Torrey'), # (parsed 1436)
A(address='fxa@boombox.micro.umn.edu',name='Farhad Anklesaria'), # (parsed 1436)
A(address='linimon@lonesome.com',name='Mark Linimon'), # (parsed 1437)
A(address='troth@rice.edu',name='Rick Troth'), # (parsed 1440)
A(address='rebraudes@tasc.com',name='Robert Braudes'), # (parsed 1458)
A(address='gszabele@tasc.com',name='Steve Zabele'), # (parsed 1458)
A(address='ache@astral.msk.su',name='Andrew A. Chernov'), # (parsed 1489)
A(address='saltzer@mit.edu',name='Jerome H. Saltzer'), # (parsed 1498)
A(address='brunsene@email.enmu.edu',name='Eric Brunsen'), # (parsed 1501)
A(address='cook@path.net',name='Gordon Cook'), # (parsed 1527)
A(address='gavron@aces.com',name='Ehud Gavron'), # (parsed 1535)
A(address='tmendez@bbn.com',name='Trevor Mendez'), # (parsed 1546)
A(address='handa@etl.go.jp',name='Ken\x27ichi Handa'), # (parsed 1554)
A(address='earndoc@earncc.earn.net',name='EARN Staff'), # (parsed 1580)
A(address='mckenzie@ralvma.vnet.ibm.com',name='William F. McKenzie'), # (parsed 1593)
A(address='forster@cisco.com',name='James R. Forster'), # (parsed 1613)
A(address='satz@cisco.com',name='Greg Satz'), # (parsed 1613)
A(address='r.day@jnt.ac.uk',name='Robert Day'), # (parsed 1613)
A(address='gglick@cisco.com',name='Gilbert Glick'), # (parsed 1613)
A(address='francois@wais.com',name='Francois Schiettecatte'), # (parsed 1625)
A(address='morris@wais.com',name='Harry Morris'), # (parsed 1625)
A(address='wrt1@cornell.edu',name='William Turner'), # (parsed 1691)
A(address='connolly@udel.edu',name='Tom Connolly'), # (parsed 1693)
A(address='ficarell@cpdmfg.cig.mot.com',name='Domenic Ficarella'), # (parsed 1705)
A(address='drg508@crane-ns.nwscc.sea06.navy.mil',name='Dan R. Gowin'), # (parsed 1708)
A(address='pleitner@cs.curtin.edu.au',name='Scott Pleitner'), # (parsed 1712)
A(address='flint@cs.curtin.edu.au',name='Daniel Baldoni'), # (parsed 1712)
A(address='craig@cs.curtin.edu.au',name='Craig Farrell'), # (parsed 1712)
A(address='artur@fct.unl.pt',name='Artur Romao'), # (parsed 1713)
A(address='tae@novell.com',name='Tae Sung'), # (parsed 1791)
A(address='sylvain.langlois@der.edf.fr',name='Sylvain Langlois'), # (parsed 1802)
A(address='rlasher@forsythe.stanford.edu',name='Rebecca Lasher'), # (parsed 1807)
A(address='execdir@fnc.gov',name='Federal Networking Council'), # (parsed 1811)
A(address='peter.staubach@eng.sun.com',name='Peter Staubach'), # (parsed 1813)
A(address='dcoli@cisco.com',name='Dave Coli'), # (parsed 1841)
A(address='krowett@cisco.com',name='Kevin Rowett'), # (parsed 1841)
A(address='agh@cisco.com',name='Andy Harvey'), # (parsed 1841)
A(address='joelle@cisco.com',name='Joelle Bafile Chapman'), # (parsed 1841)
A(address='hzrfc@usai.asiainfo.com',name='Ya-Gui Wei'), # (parsed 1842)
A(address='jian@is.rice.edu',name='Jian Q. Li'), # (parsed 1842)
A(address='ding@beijing.asiainfo.com',name='Jian Ding'), # (parsed 1842)
A(address='zhang@orion.harvard.edu',name='Yun Fei Zhang'), # (parsed 1842)
A(address='lee@csl.stanford.edu',name='Fung Fung Lee'), # (parsed 1843)
A(address='romkey@apocalypse.org',name='John Romkey'), # (rfced 1862)
A(address='hancock@network-1.com',name='Bill Hancock'), # (parsed 1882)
A(address='pjnesser@rocket.com',name='Philip J. Nesser'), # (parsed 1916)
A(address='rogers@isi.edu',name='Craig Milo Rogers'), # (parsed 1927)
A(address='engebred@ncr.disa.mil',name='D.W. Engebretson'), # (parsed 1956)
A(address='abarbir@gandalf.ca',name='Abdulkader Barbir'), # (parsed 1993)
A(address='randy@cs.berkeley.edu',name='Randy H. Katz'), # (parsed 2041)
A(address='jra@scfn.thpl.lib.fl.us',name='Jay R. Ashworth'), # (parsed 2100)
A(address='psv@nada.kth.se',name='Peter Svanberg'), # (parsed 2130)
A(address='ramos@isi.edu',name='Alegre Ramos'), # (parsed 2199)
A(address='ejw@ics.uci.edu',name='E. James Whitehead'), # (parsed 2291)
A(address='bressen@leftbank.com',name='Andrew K. Bressen'), # (parsed 2321)
A(address='koos@cetis.hvu.nl',name='Koos van den Hout'), # (parsed 2322)
A(address='andre@nl.net',name='Andre Koopal'), # (parsed 2322)
A(address='slavitch@loran.com',name='Michael Slavitch'), # (parsed 2325)
A(address='czhu@ix.netcom.com',name='Chad Zhu'), # (parsed 2429)
A(address='garys@pictel.com',name='Gary Sullivan'), # (parsed 2429)
A(address='djw@vineyard.net',name='David Waitzman'), # (parsed 2549)
A(address='msm@pa.dec.com',name='Mark Manasse'), # (parsed 2550)
A(address='delacruz@isi.edu',name='a. delacruz'), # (rfced 2599)
A(address='roberts@icann.org',name='Michael M. Roberts'), # (parsed 2860)
A(address='s.sivalingham@ericsson.com',name='Sanjeevan Sivalingham'), # (parsed 2989)
A(address='hskoo@sta.samsung.com',name='Haeng S. Koo'), # (parsed 2989)
A(address='ejaques@akamail.com',name='Eric Jaques'), # (parsed 2989)
A(address='kennedyh@engin.umich.edu',name='Hugh Kennedy'), # (parsed 3091)
A(address='yoshi@spg.yrp.nttdocomo.co.jp',name='Takeshi Yoshimura'), # (parsed 3095)
A(address='raj.sanmugam@ericsson.ca',name='Raj Sanmugam'), # (parsed 3113)
A(address='stuartb@uu.net',name='s. barkley'), # (rfced 3127)
A(address='stjohns@rainmakertechnologies.com',name='m. st.johns'), # (rfced 3127)
A(address='ayaki@ddi.co.jp',name='Takahiro Ayaki'), # (parsed 3141)
A(address='t-seki@kddi.com',name='Takuo Seki'), # (parsed 3141)
A(address='jay.perry@netapp.com',name='Jay Perry'), # (parsed 3198)
A(address='dleshc@tibco.com',name='Dan Leshchiner'), # (parsed 3208)
A(address='todd@talarian.com',name='Todd L. Montgomery'), # (parsed 3208)
A(address='rajitha@cisco.com',name='Rajitha Sumanasekera'), # (parsed 3208)
A(address='tim-kilty@mediaone.net',name='Timothy E. Kilty'), # (parsed 3212)
A(address='peter.stark@ecs.ericsson.com',name='Peter Stark'), # (parsed 3236)
A(address='stiliadi@bell-labs.com',name='Dimitrios Stiliadis'), # (parsed 3246)
A(address='kent.benson@tellabs.com',name='Kent Benson'), # (parsed 3246)
A(address='bill.courtney@trw.com',name='William Courtney'), # (parsed 3246)
A(address='crk@research.att.com',name='Charles Kalmanek'), # (parsed 3247)
A(address='tim_ellison@uk.ibm.com',name='Tim Ellison'), # (parsed 3253)
A(address='jmacd@cs.berkeley.edu',name='Joshua P. MacDonald'), # (parsed 3284)
A(address='kcleung@cs.ttu.edu',name='Ka-Cheong Leung'), # (parsed 3321)
A(address='yjkim@pec.etri.re.kr',name='Yong-Jin Kim'), # (parsed 3338)
A(address='mahesh@erg.abdn.ac.uk',name='Mahesh Sooriyabandara'), # (parsed 3449)
A(address='mark.foster@neustar.biz',name='Mark D. Foster'), # (parsed 3482)
A(address='tlatla@verizon.net',name='Terry L. Anderson'), # (parsed 3525)
A(address='mika.kojo@helsinki.fi',name='Mika Kojo'), # (parsed 3526)
A(address='ak@suse.de',name='Andi Kleen'), # (parsed 3549)
A(address='atsushi@exa.onlab.ntt.co.jp',name='Atsushi Watanabe'), # (parsed 3604)
A(address='steve@lsi.upc.es',name='Steven Willmott'), # (parsed 3616)
A(address='john@yas.com',name='John Bevilacqua'), # (parsed 3634)
A(address='donnell@mcdata.com',name='Michael E. O\x27Donnell'), # (parsed 3643)
A(address='rsabett@cooley.com',name='Randy V. Sabett'), # (parsed 3647)
A(address='swu@infoliance.com',name='Stephen S. Wu'), # (parsed 3647)
A(address='reagle@mit.edu',name='Joseph M. Reagle'), # (parsed 3653)
A(address='hlqian@cnnic.net.cn',name='QIAN Hualin'), # (parsed 3743)
A(address='huangk@alum.sinica.edu',name='Kenny HUANG'), # (parsed 3743)
A(address='dlee@yahoo-inc.com',name='Daniel T Lee'), # (parsed 3745)
A(address='richard@elysium.ltd.uk',name='Richard Clark'), # (parsed 3745)
A(address='gery.verwimp@siemens.com',name='Gery Verwimp'), # (parsed 3868)
A(address='duerst@w3.org',name='Martin Duerst'), # (parsed 3987)
A(address='joes@exmsft.com',name='Joe Souza'), # (parsed 4171)
A(address='wayland@troikanetworks.com',name='Wayland Jeong'), # (parsed 4172)
A(address='rod.mullendore@mcdata.com',name='Rod Mullendore'), # (parsed 4172)
A(address='mark_edwards@adaptec.com',name='Mark Edwards'), # (parsed 4172)
A(address='sllee@kisa.or.kr',name='Seoklae Lee'), # (parsed 4196)
A(address='dhcheon@mmaa.or.kr',name='d.h. cheon'), # (rfced 4269)
A(address='havander@cisco.com',name='Harmen van der Linde'), # (parsed 4382)
A(address='vijay.nanjundaswamy@oracle.com',name='Vijay Nanjundaswamy'), # (parsed 4403)
A(address='dbs@mts.ru',name='Dennis Shefanovski'), # (parsed 4491)
A(address='olivier.rousseau@alcatel.fr',name='Olivier Rousseau'), # (parsed 4497)
A(address='mab@cryptico.com',name='Martin Boesgaard'), # (parsed 4503)
A(address='mvp@cryptico.com',name='Mette Vesterager'), # (parsed 4503)
A(address='jongchoi@us.ibm.com',name='Jong Hyuk Choi'), # (parsed 4533)
A(address='tommcs@us.ibm.com',name='Tom McSweeney'), # (parsed 4544)
A(address='yaoth@huawei.com',name='Zhonghui Yao'), # (parsed 4564)
A(address='sato652@oki.com',name='Noriyuki Sato'), # (parsed 4585)
A(address='davidleon123@yahoo.com',name='David Leon'), # (parsed 4588)
A(address='snw@twnic.net.tw',name='Nai-Wen HSU'), # (parsed 4713)
A(address='carolina.canales@ericsson.com',name='Carolina Canales-Valenzuela'), # (parsed 4740)
A(address='adahmed@cisco.com',name='Adeel Ahmed'), # (parsed 4779)
A(address='ip-sfs@mur.at',name='Aaron Bachmann'), # (parsed 4824)
A(address='paul_mabey@cable.comcast.com',name='Paul Mabbey'), # (parsed 4972)
A(address='satish.kumar@ti.com',name='s. kumar'), # (rfced 5098)
A(address='john.shirron@ecitele.com',name='John Shirron'), # (parsed 5143)
A(address='diego@fastsoft.com',name='Diego Dugatkin'), # (parsed 5180)
A(address='ahamza@cisco.com',name='Ahmed Hamza'), # (parsed 5180)
A(address='gogo@tera.ics.keio.ac.jp',name='Kazutaka Gogo'), # (parsed 5184)
A(address='shibrie@tera.ics.keio.ac.jp',name='Rie Shibui'), # (parsed 5184)
A(address='joseph.tardo@nevisnetworks.com',name='Joseph Tardo'), # (parsed 5209)
A(address='rick_whitner@agilent.com',name='Rick Whitner'), # (parsed 5236)
A(address='tarun.banka@colostate.edu',name='Tarun Banka'), # (parsed 5236)
A(address='abhijit_bare@agilent.com',name='Abhijit A. Bare'), # (parsed 5236)
A(address='nischal.piratla@telekom.de',name='Nischal M. Piratla'), # (parsed 5236)
A(address='gwhiz@gwhiz.com',name='Michael Glenn Williams'), # (parsed 5412)
A(address='subbu@arubanetworks.com',name='Subbu Ponnuswamy'), # (parsed 5413)
A(address='sugiura.mikihito@jp.panasonic.com',name='Mikihito Sugiura'), # (parsed 5414)
A(address='a-mondal@northwestern.edu',name='Amit Mondal'), # (parsed 5562)
A(address='jack@atosc.org',name='Aymeric Moizard'), # (parsed 5574)
A(address='ae.arcia@telecom-bretagne.eu',name='Andres Arcia'), # (parsed 5690)
A(address='yong.xin@radisys.com',name='Yong Xin'), # (parsed 5707)
A(address='quynh.dang@nist.gov',name='Quynh Dang'), # (parsed 5758)
A(address='gporcu@gmail.com',name='Giorgio Porcu'), # (parsed 5826)
A(address='jblanton@irg.cs.ohiou.edu',name='Josh Blanton'), # (parsed 5827)
A(address='jrrivers@yahoo.com',name='JR. Rivers'), # (parsed 5837)
A(address='turkal@google.com',name='Warren Turkal'), # (parsed 5841)
A(address='rhay@google.com',name='Richard Hay'), # (parsed 5841)
A(address='hemant.malik@airtel.in',name='Hemant Malik'), # (parsed 5946)
A(address='kalle@tankesaft.se',name='Karl-Magnus Moller'), # (parsed 5984)
A(address='chaitk@yahoo.com',name='Chaitanya Kodeboniya'), # (parsed 7117)
A(address='inazar@deviantart.com',name='Imran Nazar'), # (parsed 7168)
A(address='max@rfc2324.org',name='Maximilian Wilhelm'), # (parsed 7511)
A(address='mansaxel@besserwisser.org',name='Mans Nilsson'), # (parsed 8135)
A(address='magda@netinsight.net',name='Magnus Danielson'), # (parsed 8135)



]

def forward(apps, schema_editor):
    Person = apps.get_model('person','Person')
    Email = apps.get_model('person','Email')
    for address,name in discovered_people:
        if Email.objects.filter(address=address).exists():
            print "Skipping",address,name,": address already in Email table" 
            # If this happens, rollback will not be perfect
        else:
            p = Person.objects.create(name=name,ascii=name)
            p.email_set.create(address=address)

def reverse(apps, schema_editor):
    Email = apps.get_model('person','Email')
    for address, name in discovered_people:
        e = Email.objects.get(address=address)
        e.person.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('person', '0018_add_email_address_from_correlated_inspection'),
    ]

    operations = [
        migrations.RunPython(forward, reverse)
    ]
